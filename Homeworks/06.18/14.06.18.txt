1) 1) Любое количество букв, а потом две цифры и наоборот.
      2) 2-4 цифры, а потом 2-4 буквы и наоборот.
      3) Пользователь вводит имя и фамилию. Буквы могут быть в разных регистрах.
      Проверить, чтобы первые буквы были в верхнем регистре, а остальные буквы - в нижнем.
         4) В строке содержутся слова и числа. Необходмо выделить числа и посчитать их сумму.
         5) Пользователь вводит телефон в формате (ххх)ххх-хх-хх.
         (ххх) может быть таким: (095), (097), (073), (067), (099), (063).
         Проверить, чтобы 7 - ый номер был в формате "(ххх)ххх-хх-хх".
         Если пользователь вводит номер начинающийся на(095) или (099) ххх-хх-хх, выводить в консоль "Пользователь имеет МТС номер",
         на(097) или (067) ххх-хх-хх, выводить в консоль "Пользователь имеет Киевстар номер",
         на(073) или (063) ххх-хх-хх, выводить в консоль "Пользователь имеет Лайф номер"

         6) Please create an abstarct class Shape and two subclasses Square and Circle. Replace code in method drawShape()
         according to principles of polymorphism. Please propose the other solutions for improving quality of the code.

         enum ShareType {
             SQUARE, CIRCLE
         }

         class Shape {
             private ShareType shareType;

             //other fields


             public Shape(ShareType shareType) {
                 this.shareType = shareType;
             }

             public ShareType getShareType() {
                 return shareType;
             }

             public void drawSquare() {
                 //Code for drawing square
             }

             public void drawCircle() {
                 //Code for drawing square
             }

             public void drawShape() {
                 if (getShareType() == ShareType.SQUARE) {
                     drawSquare();
                 } else {
                     drawCircle();
                 }
             }

             //others methods
         }
Показать задачу из EPAM