/* public ManAddress() {
        this.infoMan = new HashMap <>();
    }

    public void addMan(Man man) {
        if (infoMan.containsKey(man)) {
            System.out.println("This man exists");
            return;
        }
        infoMan.put(man, new ArrayList <>());
    }

    public void selectMan() {
        System.out.println("SELECT * FROM Man");
        infoMan.keySet().forEach(key -> System.out.println(key));
    }

    public void selectAddress() {
        System.out.println("SELECT * FROM Address");
//        infoMan.values().stream().filter(Address.class::isInstance).map(Man.class::cast).collect(Collectors.toList());
//        infoMan.keySet().
//         infoMan.entrySet().stream().forEach(r -> r.getValue().stream().map(Address::toString));
        infoMan.keySet().forEach(key -> key.getAddress().toString());

    }

    public void selectGroupByCountOfChildren() {
        System.out.println("SELECT count(*) FROM Man GROUP BY countOfChildren");*/


//    }


https://stackoverflow.com/questions/47153287/updating-nested-list-using-lambda-expression-java-8


    public static void main(String[] args) throws Exception {
        Map<String, String> dictionary = new HashMap<>();
        dictionary.put("java", "джава");
        dictionary.put("drive", "управляет");
        dictionary.put("whole", "цэлый");
        dictionary.put("world", "мир");

        System.out.println("Input your line: ");
        BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));
        String s = buf.readLine();

        String[] s2 = s.split(" ");
        for (String arr : s2) {

            Set<Map.Entry<String, String>> ent = dictionary.entrySet();
            for (Map.Entry<String, String> mapEnt : ent) {
                String s1 = mapEnt.getKey();
                if (s1.equals(arr)) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(mapEnt.getValue()).append(" ");
                    System.out.print(sb.toString());

                }
            }
        }

mport java.util.HashMap;
import java.util.Map;

public class App {
    public static void main(String[] args) {
        Map<Lang, Map<String, String>> mainMap = new HashMap<>();
        Map inner = new HashMap<String, String>();

        inner.put("PRIVET", "HELLO");
        inner.put("PRIVET2", "HELLO2");

        mainMap.put(Lang.EN, inner);
        for (Map.Entry<Lang, Map<String, String>> entry : mainMap.entrySet()) {
            System.out.println(entry.getValue().get("PRIVET"));
            for (Map.Entry<String, String> innerMapInFor : entry.getValue().entrySet()) {
                System.out.println("K = " + innerMapInFor.getKey() + ", V= " + innerMapInFor.getValue());
            }
        }

        mainMap.forEach((k, v) -> System.out.println("EN=" + v.get("PRIVET")));
    }
}

